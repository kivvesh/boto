class Competence: # класс итоги проверки
    kur_d = {
        'должность 1':['курс 1','курс 3'],
        'должность 2':['курс 2','курс 3','курс 4'],
        'должность 3':['курс 2','курс 3'],
        'должность 4':['курс 1','курс 2','курс 3','курс 4'],

        }
    com_kur = {
        'копетенция 1':'курс 1',
        'копетенция 3':'курс 2',
        'копетенция 4':'курс 3',
        'копетенция 2':'курс 4',
        }
    ball_com = {
        'должность 1':[('копетенция 1',3),('копетенция 3',1),('копетенция 4',2)],
        'должность 2':[('копетенция 2',1),('копетенция 3',3)],
        'должность 3':[('копетенция 1',3),('копетенция 2',3),('копетенция 3',3),('копетенция 4',1)],
        'должность 4':[('копетенция 2',2),('копетенция 2',2)],
        }
    def __init__(self,name,dol,kom):
        self.name = name
        self.dol = dol
        self.kom = kom
    def test(self):
        kurs=[]
        los_c =[]
        kb_sotr = self.ball_com[self.dol]
        for b in kb_sotr:
            try:
                if self.kom[b[0]]<b[1]:
                    los_c.append(b[0])
            except:
                print(b[0])
                los_c.append(b[0])
        return los_c

    def ye_kur(self):
        comps = self.test()
        con_ker = []
        if len(comps)==0:
            return 'сотрудник является компитентным'
        for comp in comps:
            kur = self.com_kur[comp]
            if kur in self.kur_d[self.dol]:
                con_ker.append(kur)
            else:
                return 'уволить'
        return con_ker

def test(): #тестирование
    sotr1 = Competence('сотрудник 1','должность 1',{'копетенция 1':3,'копетенция 3':1,'копетенция 4':2,})
    sotr2 = Competence('сотрудник 2','должность 3',{'копетенция 1':3,'копетенция 2':2,'копетенция 3':1,'копетенция 4':1,})
    sotr3 = Competence('сотрудник 1','должность 2',{'копетенция 2':3,'копетенция 3':1})
    sotr4 = Competence('сотрудник 1','должность 4',{'копетенция 1':2,'копетенция 2':3})
    assert sotr1.ye_kur() == 'сотрудник является компитентным'
    assert sotr2.ye_kur() == 'уволить'
    assert sotr3.ye_kur() == ['курс 2']
    assert sotr4.ye_kur() == 'сотрудник является компитентным'

test()     


            
        
        
    
